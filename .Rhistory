#heterogeniety
Mod.1 <- felm(log(TotBio) ~  log(Sr) + log(Sr):NTrt | plotid + field.by.yeardummy , data = olddat, exactDOF='rM')
summary(Mod.1, robust = TRUE, cluster = TRUE)
Mod.1 <- felm(log(TotBio) ~ log(Sr)*NAtm.NAdd |  field.by.yeardummy , data = olddat, exactDOF='rM')
summary(Mod.1, robust = TRUE, cluster = TRUE)
Mod.1 <- felm(log(TotBio) ~ log(Sr)*Ntrt |  field.by.yeardummy , data = olddat, exactDOF='rM')
summary(Mod.1, robust = TRUE, cluster = TRUE)
Mod.1 <- felm(log(TotBio) ~ log(Sr) + log(Sr):NAdd |  plotid + field.by.yeardummy , data = olddat, exactDOF='rM')
summary(Mod.1, robust = TRUE, cluster = TRUE)
#this wont run because maybe the same amt of N added in the same plots through time so NAdd is absorbed by the plotid effect.
Mod.1 <- felm(log(TotBio) ~ log(Sr) + NAdd |  plotid , data = olddat, exactDOF='rM')
summary(Mod.1, robust = TRUE, cluster = TRUE)
# Lagged-dependent variable models #
Mod.lagged <- felm(log(TotBio) ~ log(Sr) + NAdd |  plotid , data = olddat, exactDOF='rM')
summary(Mod.1, robust = TRUE, cluster = TRUE)
##### Add covariates #######
covar1 <- lm(log(TotBio) ~ log(Sr) + Evenness + Burned + Year:Field, data = olddat )
summary(covar1)
covar1 <- lm(log(TotBio) ~ log(Sr) + Fenced + Burned, data = olddat )
summary(covar1)
covar1 <- lm(log(TotBio) ~ log(Sr) + Fenced , data = olddat )
summary(covar1)
# year effects only
covar1 <- lm(log(TotBio) ~  Year + log(Sr) + Fenced , data = olddat )
summary(covar1)
# plot level effects
covar1 <- lm(log(TotBio) ~ Plot + log(Sr) + Fenced , data = olddat )
summary(covar1)
#field effects only
covar1 <- lm(log(TotBio) ~ Field + log(Sr) + Fenced , data = olddat )
summary(covar1)
# plot and year effects
# plot level effects
covar1 <- lm(log(TotBio) ~ Plot + Year + log(Sr) + Fenced , data = olddat )
summary(covar1)
# plot and field effects
covar1 <- lm(log(TotBio) ~ Plot + Field + log(Sr) + Fenced , data = olddat )
summary(covar1)
## plot and field:year effects
covar1 <- lm(log(TotBio) ~ Plot + Field:Year + log(Sr) + Fenced , data = olddat )
summary(covar1)
#NAdd
Nmod <- lm(log(TotBio) ~ Plot + Field:Year + log(Sr) + NAdd, data = olddat )
summary(Nmod)
Nmod <- lm(log(TotBio) ~ NAdd, data = olddat )
summary(Nmod)
Nmod <- lm(log(Sr) ~ NAdd, data = olddat )
summary(Nmod)
Nmod <- lm(log(Sr) ~ NAdd + Field, data = olddat )
summary(Nmod)
Nmod <- lm(log(Sr) ~ NAdd*Field, data = olddat )
summary(Nmod)
# NTrt
# Fenced
# Burned
# NTrt
## Panel FE model
covar1 <- lm(log(TotBio) ~ Plot + Year*Field + log(Sr) + Fenced , data = olddat )
summary(covar1)
## Panel FE model with evenness controlled for
covar1 <- lm(log(TotBio) ~ Plot + Year*Field + log(Sr) + Fenced + Evenness , data = olddat )
summary(covar1)
## Panel FE model with evenness controlled for
covar1 <- lm(log(TotBio) ~ Plot + Year*Field + log(Sr) + Burned + Evenness , data = olddat )
summary(covar1)
## Panel FE model with evenness controlled for
covar1 <- lm(log(TotBio) ~ Plot + Year:Field + log(Sr) + Burned + Fenced + Evenness , data = olddat )
summary(covar1)
## process data to run other types of models
# create a demeaned variable
olddat[,dm.Sr := Sr-mean(Sr, na.rm=T), by= .(Plot, Field)]
olddat[,dm.TotBio := TotBio -mean(TotBio , na.rm=T), by= .(Plot, Field)]
demeaned_mod <- lm(dm.TotBio ~  Year:Field + dm.Sr + Burned + Fenced + Evenness , data = olddat)
summary(demeaned_mod )
demeaned_mod <- lm(dm.TotBio ~  Year + dm.Sr + Burned + Fenced + Evenness , data = olddat)
summary(demeaned_mod )
demeaned_mod <- lm(dm.TotBio ~  Field + dm.Sr + Burned + Fenced + Evenness , data = olddat)
summary(demeaned_mod )
#create a lag
olddat[order(Year), lagged_Sr := shift(Sr), by =.(Plot, Field)]
olddat[order(Year), lagged_TotBio := shift(TotBio), by =.(Plot, Field)]
demeaned_mod <- lm(dm.TotBio ~  Field + Sr + lagged_Sr + Burned + Fenced + Evenness , data = olddat)
summary(demeaned_mod )
#create a change variable (first difference)
olddat[order(Year), change_Sr:= Sr - shift(Sr), by =.(Plot, Field)]
olddat[order(Year), change_TotBio := TotBio - shift(TotBio), by =.(Plot, Field)]
hist(olddat$change_Sr)
hist(olddat$change_TotBio)
plot(olddat$change_TotBio ~ olddat$change_Sr)
c <- lm(olddat$change_TotBio ~ olddat$change_Sr)
abline(c, col= "red")
d <- lm(olddat$change_TotBio ~ olddat$change_Sr + olddat$Field)
summary(d)
abline(d, col = "yellow")
e <- lm(olddat$change_TotBio ~ olddat$change_Sr + olddat$Field:olddat$Year)
# modified from nutnet stuff:
olddat[,dm.changeSr := change_Sr -mean(change_Sr, na.rm=T), by=.(Field, Year)]
comb[,dm.changeTotBio := change_TotBio -mean(change_TotBio, na.rm = T), by=.(Field, Year)]
# We'll also do (double) demeaning of logged values to mimic
# what's done in log-log model
olddat[,`:=`(log.Sr=log(Sr), log.TotBio=log(TotBio))]
olddat[order(Year), change.log.Sr := log(Sr)-shift(log(Sr)), by =.(Plot, Field)]
olddat[order(Year), change.log.TotBio := log(TotBio)-shift(log(TotBio)), by =.(Plot, Field)]
olddat[, dm.change.log.Sr :=change.log.Sr -mean(change.log.Sr, na.rm=T), by =.(Plot, Field)]
olddat[, dm.change.log.TotBio :=change.log.TotBio -mean(change.log.TotBio, na.rm=T), by =.(Plot, Field)]
# Panel analog (plot FE and site-year effects)
ggplot(olddat[!is.na(dm.change.log.Sr) & !is.na(dm.change.log.TotBio),],
aes(x=dm.change.log.Sr,
y=dm.change.log.TotBio)) +
geom_smooth(method="lm", se=F) +
theme_bw() +
geom_point()
#################################
# Goals of plots
# Baseline levels differ by site
# Variation through site after removing important differences.
# changerich and changelive_mass are first differences in rich
# and live_mass at the plot level. Preferred models use plot FE and
# site x year effects, so take the changes and demean by plots within
# same site and year
# Plot for raw data relationship
ggplot(olddat[!is.na(Sr) & !is.na(TotBio),],
aes(x=Sr,
y=TotBio)) +
geom_smooth(method="lm", se=T) +
theme_bw() +
geom_point()
#Raw changes
ggplot(olddat[!is.na(change_Sr) & !is.na(change_TotBio),],
aes(x=change_Sr,
y=change_TotBio)) +
geom_smooth(method="lm", se=T) +
theme_bw() +
geom_point()
# Plots for log-log models - punchline
# Cross-sectional analog
ggplot(olddat[!is.na(log(Sr)) & !is.na(log(TotBio)),],
aes(x=log(Sr),
y=log(TotBio))) +
geom_smooth(method="lm", se=T) +
theme_bw() +
geom_point()
# Plot FE only
# ggplot(olddat[!is.na(ihs(changeSr) & !is.na(ihs(change_TotBio)),],
#        aes(x=ihs(changeSr),
#            y=ihs(change_TotBio))) +
#   geom_smooth(method="lm", se=F) +
#   theme_bw() +
#   geom_point()
# Panel analog (plot FE and site-year effects)
ggplot(comb[!is.na(dm.change.log.rich) & !is.na(dm.change.log.live_mass),],
aes(x=dm.change.log.rich,
y=dm.change.log.live_mass)) +
geom_smooth(method="lm", se=F) +
theme_bw() +
geom_point()
# from nutnet stuff:
comb[,dm.changerich:=changerich-mean(changerich, na.rm=T), by=.(site,year)]
comb[,dm.changelive_mass:=changelive_mass-mean(changelive_mass, na.rm=T), by=.(site,year)]
# We'll also do (double) demeaning of logged values to mimic
# what's done in log-log model
comb[,`:=`(log.rich=log(rich), log.live_mass=log(live_mass))]
comb[order(year), change.log.rich := log(rich)-shift(log(rich)), by =.(plot, site_code)]
comb[order(year), change.log.live_mass := log(live_mass)-shift(log(live_mass)), by =.(plot, site_code)]
comb[,dm.change.log.rich:=change.log.rich-mean(change.log.rich, na.rm=T), by=.(site,year)]
comb[,dm.change.log.live_mass:=change.log.live_mass-mean(change.log.live_mass, na.rm=T), by=.(site,year)]
##########################################################################################
# Make some figures to get at importance of panel data methods
# and sources of variation in NutNet
###########################################################################################
### felm from lfe package
#" The formula specification is a response variable followed by a four part formula.
#The first part consists of ordinary covariates, the second part consists of factors to be projected out.
# The third part is an IV-specification. The fourth part is a cluster
#specification for the standard errors.
# I.e. something like y ~ x1 + x2 | f1 + f2 | (Q|W ~ x3+x4) | clu1 + clu2
# where y is the response, x1,x2 are ordinary covariates, f1,f2 are factors to be projected out,
# Q and W are covariates which are instrumented by x3 and x4, and clu1,clu2 are factors to be used
#for computing cluster robust standard errors. Parts that are not used should be specified as 0,
#except if it's at the end of the formula, where they can be omitted."
# https://www.rdocumentation.org/packages/lfe/versions/2.8-3/topics/felm
mod1 <- felm(log(TotBio) ~ + log(Sr)  + ihs(Evenness) +  NAdd | Plot + Field:Year, data = olddat )
summary(mod1, cluster = TRUE, robust = TRUE)
plot(PerrenialIntroduced ~ PerrenialNative, data = olddat)
plot(Sr ~ PerrenialNative, data = olddat)
plot(Sr ~ PerrenialIntroduced, data = olddat)
# AnnualBiannualNative AnnualBiannualIntroduced
head(olddat)
##Load processed Data, processed from version 'comb-by-plot-clim-soil-diversity-28-Apr-2017.csv'
setwd("~/Google Drive/NutNet Causality for Steve/")
comb <- fread("NutNetControlPlotDataToUseApril2017.csv",na.strings='NA')
comb$site <- comb$site_code
comb$plot = as.factor(comb$plot)
# Goals of plots
# Baseline levels differ by site
# Variation through site after removing important differences.
# changerich and changelive_mass are first differences in rich
# and live_mass at the plot level. Preferred models use plot FE and
# site x year effects, so take the changes and demean by plots within
# same site and year
comb[,dm.changerich:=changerich-mean(changerich, na.rm=T), by=.(site,year)]
comb[,dm.changelive_mass:=changelive_mass-mean(changelive_mass, na.rm=T), by=.(site,year)]
# We'll also do (double) demeaning of logged values to mimic
# what's done in log-log model
comb[,`:=`(log.rich=log(rich), log.live_mass=log(live_mass))]
comb[order(year), change.log.rich := log(rich)-shift(log(rich)), by =.(plot, site_code)]
comb[order(year), change.log.live_mass := log(live_mass)-shift(log(live_mass)), by =.(plot, site_code)]
comb[,dm.change.log.rich:=change.log.rich-mean(change.log.rich, na.rm=T), by=.(site,year)]
comb[,dm.change.log.live_mass:=change.log.live_mass-mean(change.log.live_mass, na.rm=T), by=.(site,year)]
# Plot for raw data relationship
ggplot(comb[!is.na(rich) & !is.na(live_mass),],
aes(x=rich,
y=live_mass)) +
geom_smooth(method="lm", se=T) +
theme_bw() +
geom_point()
# Raw changes
ggplot(comb[!is.na(changerich) & !is.na(changelive_mass),],
aes(x=changerich,
y=changelive_mass)) +
geom_smooth(method="lm", se=T) +
theme_bw() +
geom_point()
# Plots for log-log models - punchline
# Cross-sectional analog
ggplot(comb[!is.na(log.rich) & !is.na(log.live_mass),],
aes(x=log.rich,
y=log.live_mass)) +
geom_smooth(method="lm", se=T) +
theme_bw() +
geom_point()
# Plot FE only
ggplot(comb[!is.na(change.log.rich) & !is.na(change.log.live_mass),],
aes(x=change.log.rich,
y=change.log.live_mass)) +
geom_smooth(method="lm", se=F) +
theme_bw() +
geom_point()
# Panel analog (plot FE and site-year effects)
ggplot(comb[!is.na(dm.change.log.rich) & !is.na(dm.change.log.live_mass),],
aes(x=dm.change.log.rich,
y=dm.change.log.live_mass)) +
geom_smooth(method="lm", se=F) +
theme_bw() +
geom_point()
######
# Decompose variation from one plot
######
comb[,singledm.log.live_mass:=log.live_mass-mean(log.live_mass, na.rm=T), by=.(site, plot)]
comb[,doubledm.log.live_mass:=singledm.log.live_mass-mean(singledm.log.live_mass, na.rm=T), by=.(site, year)]
ggplot(comb[(site=="sedg.us" & plot %in% c("1","17")) | (site=="sevi.us" & plot %in% c("8","12")),],
aes(x=year, y=log.live_mass, group=plot, linetype=plot)) +
geom_line() +
ggtitle("Raw variation in log biomass") +
theme_bw() +
ylim(c(-1,7))
## why does this look different?
ggplot(comb[site=="sedg.us" & plot %in% c("1","17") | (site=="sevi.us" & plot %in% c("8","12")), ],
aes(x=year, y=singledm.log.live_mass, group=plot, linetype=plot)) +
geom_line() +
ggtitle("Variation in log biomass after removing plot FE") +
theme_bw() +
ylim(c(-5,7))
ggplot(comb[site=="sedg.us" & plot %in% c("1","17") | (site=="sevi.us" & plot %in% c("8","12")),],
aes(x=year, y=doubledm.log.live_mass, group=plot, linetype=plot)) +
geom_line() +
ggtitle("Variation in log biomass after removing plot FE and site year effects") +
theme_bw() +
ylim(c(-5,7))
#Look at all plots in sevi to see what happened in 2009
ggplot(comb[site=="sevi.us",],
aes(x=year, y=log.live_mass, group=plot, linetype=plot)) +
geom_line() +
ggtitle("Raw variation in log biomass -- all plots in sevi.us") +
theme_bw() +
ylim(c(-1,7))
# Plot histogram of average richness by site
variation.histogram.plot = ggplot(comb[,mean(rich, na.rm=T), by=plot],
aes(x=V1-11, y=..ncount..)) +
geom_histogram(binwidth=1, fill='gray') +
geom_histogram(data=comb, fill="black",
aes(x=changerich, y= -..ncount..),
binwidth=1) +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks = element_blank(),
axis.title = element_text(size=18)) +
geom_text(aes(label="Cross-sectional differences",x=10, y=0.75), size=6) +
geom_text(aes(label="Temporal differences",x=10, y=-0.75), size=6) +
xlab("") +
ylab("Normalized count")
pdf("cross_vs_time_variation_histograms.pdf", width=8, height=8)
variation.histogram.plot
dev.off()
olddat <- as.data.table(olddat)
head(olddat)
list(olddat$Year)
head(olddat)
########################################################################
## NutNet Main Text Models ###########################################
## #######################################################################
##########################################################################
rm(list = ls())
# Define project directory
#  cdir <- "C:/GitHub/NutNetCausalinf/"
#  setwd(cdir)
setwd("~/Documents/GitHub/NutNetCausalinf/")
######################################################
## BELOW THIS POINT, code should just run ##
# load packages; version numbers are noted for each package used.
library(dplyr)
require(ggplot2) # 3.3.3
library(plyr) # 1.8.6
library(data.table) # v 1.13.6
library(sandwich) #3.0-0
library(foreign) # 0.8-80
library(car)  #v  3.0-10
library(fixest)  # v 0.8.2
library(lme4)  # 1.1-26
library(texreg) # 1.37. 5
library(broom)  # v 0.7.4
library(tidyverse)  # v 1.3.0
library(RColorBrewer) #1.1-2
library(cowplot) # 1.1.1
library(corrplot)  # 0.84
library(gridExtra)
library(ggpubr)
###  **** Need to run ****
### purpose built functions
source("./code/r/useful_functions.R")
##########################################
## Analysis using small complete data ####
###### Note on data version ######
# these analyses used the 'comb-by-plot-clim-soil-diversity-09-Apr-2018.csv' with updates to the biomass data.
# To see the data processing steps, please see "ProcessData_NutNetCausality_final.R" and FilterData_comb.R" files from the raw data/
# This file was updated with notice of biomass issue August 2022; Updated biomass data for comp.pt 2015 data and marc.ar 2011 and 2012 live mass data from Peter W.
#replace data in the data version 'comb-by-plot-clim-soil-diversity-09-Apr-2018.csv'for comp.pt 2015 data and marc.ar 2011 and 2012 with data in the file 'marc-comp-comb-by.csv'
combonly <- TRUE  # combonly -> finalprocess_and_datachecks
comb <- fread("./data/NutNetControlPlotData_derived.csv",na.strings='NA')
source("./code/r/finalprocess_and_datachecks.R") ## Produces Table S1
source("./code/r/analysis_main.R") ## Produces Figures 2A, 2B, 3, and Tables S2, S3, and Figure S4
source("./code/r/analysis_sm5.R") ## Produces Tables S4, S5, and S6
source("./code/r/FiguresS1_S2_S3.R") #Produces Figures S1, S2 and S3
###########################################################################################################################
## Analysis using large cover dataset from Nutrient Network, processed from version 'full-cover-09-April-2018.csv'    ####
############################################################################################################################
rm(list=setdiff(ls(),c("cdir","ihs","tidy")))
setwd("~/Documents/GitHub/NutNetCausalinf/")
source("./code/r/useful_functions.R")
combonly <- FALSE
comb <- fread("./data/NutNetControlPlotData_derived.csv",na.strings='NA')
#**need to run ***
source("./code/r/finalprocess_and_datachecks.R") # Doesn't produce Table S1 this time
### Load cover Data  - Data processed using the code "ProcessNutNet_coverData_FINAL.R" and "FilterData_cover.R" which created all variables of SR counts and groupings
# from the raw data file from the Nutrient Network: 'full-cover-09-April-2018.csv'
cover <- fread("./data/NutNetCover_derived.csv")
source("./code/r/finalprocess_coverdata.R") # **need to run this line to prep the data for running the models**
#the finalprocess_coverdata.R also produces Figure S10.
source("./code/r/analysis_fig5_smsection8.R") ## Produces Figure 5, and tables and supplemental results for section S8 of the supplemental materials
#code to create other supplemental figures
source("./code/r/analysis_fig5_smsection8.R") #need to run the finalprocess_coverdata.R to produce.
source("./code/r/FiguresS1_S2_S3.R") #uses the comb data
MixedMod_Rich <- lmer(log(live_mass) ~ log(rich) + as.factor(country) + as.factor(habitat) + as.factor(year) +
elevation + managed + burned + grazed + anthropogenic +
TEMP_VAR_v2 + MIN_TEMP_v2 + MAX_TEMP_v2 + TEMP_WET_Q_v2 + TEMP_DRY_Q_v2 + TEMP_WARM_Q_v2 + TEMP_COLD_Q_v2 +
pct_C + pct_N + ppm_P + ppm_K + ppm_Na + ppm_Mg + ppm_S + ppm_Na + ppm_Zn + ppm_Mn + ppm_Fe + ppm_Cu + ppm_B +
pH + PercentSand + PercentSilt + PercentClay +
(1|newplotid) + (1|site_code), comb, REML = F)
MainMod_Rich     <- feols(log(live_mass) ~ log(rich)  | newplotid + site.by.yeardummy, comb)
#   Common Multivariate Analyses Models
SimpleRE_MultiVar <- lmer(log(live_mass) ~ log(rich) + as.factor(country) + as.factor(habitat) + as.factor(year) +
elevation + managed + burned + grazed + anthropogenic +
TEMP_VAR_v2 + MIN_TEMP_v2 + MAX_TEMP_v2 + TEMP_WET_Q_v2 + TEMP_DRY_Q_v2 + TEMP_WARM_Q_v2 + TEMP_COLD_Q_v2 +
pct_C + pct_N + ppm_P + ppm_K + ppm_Na + ppm_Mg + ppm_S + ppm_Na + ppm_Zn + ppm_Mn + ppm_Fe + ppm_Cu + ppm_B +
pH + PercentSand + PercentSilt + PercentClay +
(1|newplotid), comb, REML = F)
Fig2A.1 <- tidy(MixedMod_Rich) %>%
filter(term == "log(rich)")
Fig2A.2 <- tidy(MainMod_Rich) %>%
filter(term == "log(rich)")
Fig2A.1$conf.low <- .0049797
Fig2A.1$conf.high <- .7535313
Fig2A.data <-  bind_rows(
Fig2A.1 %>% mutate(reg = "Common Design in Ecology"))
#  Fig2A.2 %>% mutate(reg = "Our Main Design"))
#
# Plot
Fig2A.plot <- Fig2A.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 3, linewidth = 3, position = position_dodge(width = 1)) +
scale_colour_discrete() +
scale_color_manual(values=cbPalette[c(7,9,4,8)]) +
theme_classic() +
theme(legend.position = c(.5, 1),
legend.title = element_blank(),
legend.text  = element_text(size=18),
legend.background = element_rect(size=0.9,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=22, face="bold"),
axis.title.x = element_text(size=25),
axis.title.y = element_text(size=25),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.7, .85) +
scale_x_discrete(labels = c("" , "")) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-0.5,0,0.5)
) %>%
labs(title = "",
caption = "", x = "Species Richness", y = "Estimated effect size"
)
Fig2A.plot
Fig2A.data <-  bind_rows(
Fig2A.1 %>% mutate(reg = "Common Design in Ecology"))
#  Fig2A.2 %>% mutate(reg = "Our Main Design"))
#
# Plot
Fig2A.plot <- Fig2A.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 3, linewidth = 3, position = position_dodge(width = 1)) +
scale_colour_discrete() +
scale_color_manual(values=cbPalette[c(7,9,4,8)]) +
theme_classic() +
theme(legend.position = c(.5, 1),
legend.title = element_blank(),
legend.text  = element_text(size=18),
legend.background = element_rect(size=0.9,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=22, face="bold"),
axis.title.x = element_text(size=25),
axis.title.y = element_text(size=25),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.7, .85) +
scale_x_discrete(labels = c("" , "")) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-0.5,0,0.5)
) %>%
labs(title = "",
caption = "", x = "Species Richness", y = "Estimated effect size"
)
Fig2A.plot
## Master Palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "gray1", "red")
################################################
## Plot Common Design Only
################################################
# Prep Data
Fig2A.data <-  bind_rows(
Fig2A.1 %>% mutate(reg = "Common Design in Ecology"))
#  Fig2A.2 %>% mutate(reg = "Our Main Design"))
#
# Plot
Fig2A.plot <- Fig2A.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 3, linewidth = 3, position = position_dodge(width = 1)) +
scale_colour_discrete() +
scale_color_manual(values=cbPalette[c(7,9,4,8)]) +
theme_classic() +
theme(legend.position = c(.5, 1),
legend.title = element_blank(),
legend.text  = element_text(size=18),
legend.background = element_rect(size=0.9,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=22, face="bold"),
axis.title.x = element_text(size=25),
axis.title.y = element_text(size=25),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.7, .85) +
scale_x_discrete(labels = c("" , "")) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-0.5,0,0.5)
) %>%
labs(title = "",
caption = "", x = "Species Richness", y = "Estimated effect size"
)
Fig2A.plot
Fig2A.plot
Fig2A.plot
Fig2A.plot
Fig2A.plot
options(device = "RStudioGD")
Fig2A.plot
Fig2A.plot
options(device = "Quartz")
Fig2A.plot
dev.off()
Fig2A.plot
dev.new()
options(device = "quartz")
Fig2A.plot
dev.off()
dev.off()
dev.off()
dev.new()
dev.off()
options(device = "RStudioGD")
Fig2A.plot
