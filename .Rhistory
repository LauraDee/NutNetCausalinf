library(plyr)
library(data.table)
library(AER)
library(sandwich)
library(foreign)
library(car)
library(lfe)
library(fixest)
library(lme4)
library(texreg)
library(broom)
library(tidyverse)
library(RColorBrewer)
library(cowplot)
### purpose built functions ###
source("./code/r/useful_functions.R")
##########################################
## Analysis using small complete data ####
combonly <- TRUE  # combonly -> finalprocess_and_datachecks
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
source("./code/r/finalprocess_and_datachecks.R") ## Produces Table S1
MixedMod_Rich <- lmer(log(live_mass) ~ log(rich) + as.factor(country) + as.factor(habitat) + as.factor(year) +
elevation + managed + burned + grazed + anthropogenic +
TEMP_VAR_v2 + MIN_TEMP_v2 + MAX_TEMP_v2 + TEMP_WET_Q_v2 + TEMP_DRY_Q_v2 + TEMP_WARM_Q_v2 + TEMP_COLD_Q_v2 +
pct_C + pct_N + ppm_P + ppm_K + ppm_Na + ppm_Mg + ppm_S + ppm_Na + ppm_Zn + ppm_Mn + ppm_Fe + ppm_Cu + ppm_B +
pH + PercentSand + PercentSilt + PercentClay +
(1|newplotid) + (1|site_code), comb, REML = F)
MixedMod_Rich2 <- lmer(log(live_mass) ~ log(rich) + as.factor(country) + as.factor(habitat) + as.factor(year) +
elevation + managed + burned + grazed + anthropogenic +
TEMP_VAR_v2 + MIN_TEMP_v2 + MAX_TEMP_v2 + TEMP_WET_Q_v2 + TEMP_DRY_Q_v2 + TEMP_WARM_Q_v2 + TEMP_COLD_Q_v2 +
pct_C + pct_N + ppm_P + ppm_K + ppm_Na + ppm_Mg + ppm_S + ppm_Na + ppm_Zn + ppm_Mn + ppm_Fe + ppm_Cu + ppm_B +
pH + PercentSand + PercentSilt + PercentClay +
(1|newplotid) + (1|site_code), ml_comb, REML = F)
varnames <- "live_mass rich even simpson newplotid site_code country habitat year elevation managed burned grazed anthropogenic TEMP_VAR_v2 MIN_TEMP_v2 MAX_TEMP_v2 TEMP_WET_Q_v2 TEMP_DRY_Q_v2 TEMP_WARM_Q_v2 TEMP_COLD_Q_v2 pct_C pct_N ppm_P ppm_K ppm_Na ppm_Mg ppm_S ppm_Na ppm_Zn ppm_Mn ppm_Fe ppm_Cu ppm_B pH PercentSand PercentSilt PercentClay"
vv <- unlist(strsplit(varnames," "))
#for (i in 1:38) { # for testing only
#  print(paste(i, grep(vv[i],names(ml_comb)), sep = " , "))
#}
ml_comb <- as.data.frame(comb)
ml_comb <- ml_comb[,vv]
ml_comb <- ml_comb[complete.cases(ml_comb),]
MixedMod_Rich2 <- lmer(log(live_mass) ~ log(rich) + as.factor(country) + as.factor(habitat) + as.factor(year) +
elevation + managed + burned + grazed + anthropogenic +
TEMP_VAR_v2 + MIN_TEMP_v2 + MAX_TEMP_v2 + TEMP_WET_Q_v2 + TEMP_DRY_Q_v2 + TEMP_WARM_Q_v2 + TEMP_COLD_Q_v2 +
pct_C + pct_N + ppm_P + ppm_K + ppm_Na + ppm_Mg + ppm_S + ppm_Na + ppm_Zn + ppm_Mn + ppm_Fe + ppm_Cu + ppm_B +
pH + PercentSand + PercentSilt + PercentClay +
(1|newplotid) + (1|site_code), ml_comb, REML = F)
summary(comb)
summary(MixedMod_Rich)
summary(MixedMod_Rich2)
########################################################################
## NutNet Main Text Models ###########################################
## Laura Dee - in LFE ###############################################
##########################################################################
# updated Dec 27, 2019
#updated May 11, 2020 to include Simpsons div models
#cleaned up to focus on main results for Figures 2 & 3 on Feb 5 2021
#notes on using lfe versus previous implementation of models:
#it does, especially if you're in a "FE nested within clusters" setting
#which the code I'd given you before did not account for
# since i was unaware of it at the time
# basically when doing degrees of freedom corrections, lfe won't count fixed effects nested
# in clusters b/c that would sort of be double counting
#plotting coefficient estimates from felm objects:
# https://raw.githack.com/uo-ec607/lectures/master/08-regression/08-regression.html#high_dimensional_fes_and_(multiway)_clustering
#plotting resurces: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
# theme(legend.position="top")
#http://www.sthda.com/english/wiki/ggplot2-legend-easy-steps-to-change-the-position-and-the-appearance-of-a-graph-legend-in-r-software
rm(list = ls())
# Define project directory
cdir <- "C:/GitHub/NutNetCausalinf/"
###########################
## BELOW THIS POINT, code should just run ##
setwd(cdir)
require(ggplot2)
library(plyr)
library(data.table)
library(AER)
library(sandwich)
library(foreign)
library(car)
library(lfe)
library(fixest)
library(lme4)
library(texreg)
library(broom)
library(tidyverse)
library(RColorBrewer)
library(cowplot)
### purpose built functions ###
source("./code/r/useful_functions.R")
combonly <- FALSE
combonly <- FALSE
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
source("./code/r/finalprocess_and_datachecks.R")
ModrMod_Rich     <- feols(log(live_mass) ~ log(rich) + log(rich):site_richness | newplotid + site.by.yeardummy, comb)
summary(ModrMod_Rich)
ModModSite1 <- felm(log(live_mass) ~ log(rich) + log(rich):site_richness | newplotid + site.by.yeardummy | 0 | newplotid, data = comb, exactDOF='rM')
summary(ModModSite1 , robust = TRUE)
ModrMod_Rich     <- feols(log(live_mass) ~ log(rich) + log(rich):log(site_richness) | newplotid + site.by.yeardummy, comb)
summary(ModModSite1 , robust = TRUE)
summary(ModrMod_Rich)
ModrMod_Rich     <- feols(log(live_mass) ~ log(rich) + log(rich):site_richness | newplotid + site.by.yeardummy, comb)
summary(ModrMod_Rich)
ModrMod_Rich     <- feols(log(live_mass) ~ log(rich) + site_richness + log(rich):site_richness | newplotid + site.by.yeardummy, comb)
summary(ModrMod_Rich)
ModrMod_Rich     <- feols(log(live_mass) ~ log(rich)*site_richness | newplotid + site.by.yeardummy, comb)
ModrMod_Rich     <- feols(log(live_mass) ~ log(rich)*site_richness | newplotid, comb)
comb[, ave_site_livemass := ave(live_mass, na.rm = T), by = .(site_code)]
hist(comb$ave_site_livemass)
comb[, ave_site_livemass.peryr := ave(live_mass, na.rm = T), by = .(site_code, year)]
hist(comb$ave_site_livemass.peryr)
ModrMod_AveSiteRich     <- feols(log(live_mass) ~ log(rich) + log(rich):site_richness | newplotid + site.by.yeardummy, comb)
ModrMod_AveSiteIntRich  <- feols(log(live_mass) ~ log(rich) + log(rich):site_introduced_richness | newplotid + site.by.yeardummy, comb)
ModrMod_YrSiteRich      <- feols(log(live_mass) ~ log(rich) + log(rich):site_year_rich | newplotid + site.by.yeardummy, comb)
ModrMod_AveSiteNatRich  <- feols(log(live_mass) ~ log(rich) + log(rich):site_native_richness | newplotid + site.by.yeardummy, comb)
esttex(ModrMod_AveSiteRich, ModrMod_AveSiteIntRich, ModrMod_YrSiteRich, ModrMod_AveSiteNatRich,
coefstat = "se",
file = "./output/Table_S4_R_se.tex")
esttex(ModrMod_AveSiteRich, ModrMod_AveSiteIntRich, ModrMod_YrSiteRich, ModrMod_AveSiteNatRich,
coefstat = "confint",
file = "./output/Table_S4_R_ci.tex")
ModrMod_AveSiteProd <- feols(log(live_mass) ~ log(rich) + log(rich):ave_site_livemass  | newplotid + site.by.yeardummy, comb)
ModrMod_YrSiteProd  <- feols(log(live_mass) ~ log(rich) + log(rich):ave_site_livemass.peryr  | newplotid + site.by.yeardummy, comb)
esttex(ModrMod_AveSiteProd, ModrMod_YrSiteProd,
coefstat = "se",
file = "./output/Table_S5_R_se.tex")
esttex(ModrMod_AveSiteProd, ModrMod_YrSiteProd,
coefstat = "confint",
file = "./output/Table_S5_R_ci.tex")
## For results in Table S6 -- column 1.
ModPFE.prodgroup.peryr <- felm(log(live_mass) ~ log(rich) + log(rich):ProdGroup  | newplotid + site.by.yeardummy, data = comb, exactDOF='rM')
# do the groups based on the overall average since Wang et al was a cross-section so that is more comparable
summary(comb$ave_site_livemass.peryr)
summary(comb$ave_site_livemass)
#check that it worked length(unique(comb$ave_site_livemass))  == 43
## Do a different cut off Low, Medium, High groups of site livemass, based on Wang et al cut-offs
comb[, ProdGroup_WangCutoffs:=cut(ave_site_livemass, breaks=c(30.18,239.67,414.20,1609), labels=c("Low","Medium","High")), by = .(site_code) ]
head(comb)
table(comb$ProdGroup_WangCutoffs)
summary(comb$ProdGroup_WangCutoffs)
plot(comb$ProdGroup_WangCutoffs, main = "Productivity Groups (Average Across Years)")
## the Wang et al. paper uses a single year of data. Thus, we also need to create these cut-offs for each site and year in our data:
comb[, ProdGroup := cut(ave_site_livemass.peryr, breaks=c(30.18,239.67,414.20,1609), labels=c("Low","Medium","High"))]
head(comb)
table(comb$ProdGroup)
plot(comb$ProdGroup, main = "Productivity Groups Per Year")
## Table S6
ModrMod_ProdGroup <- feols(log(live_mass) ~ log(rich) + log(rich):ProdGroup  | newplotid + site.by.yeardummy, comb)
summary(ModrMod_ProdGroup)
#######################################################################################################################################
### Supplemental Analyses: Test robustness to moderators: SM sections S5c and S5d ################################################################################################
#######################################################################################################################################
##### Analyses for Section S5c: Moderating Effect of site-level species richness ####
## See Table S4: code to reproduce Table S4 is below.
ModrMod_AveSiteRich     <- feols(log(live_mass) ~ log(rich) + log(rich):site_richness | newplotid + site.by.yeardummy, comb)
ModrMod_AveSiteIntRich  <- feols(log(live_mass) ~ log(rich) + log(rich):site_introduced_richness | newplotid + site.by.yeardummy, comb)
ModrMod_YrSiteRich      <- feols(log(live_mass) ~ log(rich) + log(rich):site_year_rich | newplotid + site.by.yeardummy, comb)
ModrMod_AveSiteNatRich  <- feols(log(live_mass) ~ log(rich) + log(rich):site_native_richness | newplotid + site.by.yeardummy, comb)
esttex(ModrMod_AveSiteRich, ModrMod_AveSiteIntRich, ModrMod_YrSiteRich, ModrMod_AveSiteNatRich,
coefstat = "se",
file = "./output/Table_S4_R_se.tex")
esttex(ModrMod_AveSiteRich, ModrMod_AveSiteIntRich, ModrMod_YrSiteRich, ModrMod_AveSiteNatRich,
coefstat = "confint",
file = "./output/Table_S4_R_ci.tex")
#######################################################################################################################################
### Supplemental Analyses:  S5d Moderating Effect of site-level productivity  ################################################################################################
#######################################################################################################################################
## See Table S5 & 6: code to reproduce results
###########################################################
### Compute average site-level productivity (live mass) ###
###########################################################
comb[, ave_site_livemass := ave(live_mass, na.rm = T), by = .(site_code)]
#hist(comb$ave_site_livemass)
comb[, ave_site_livemass.peryr := ave(live_mass, na.rm = T), by = .(site_code, year)]
#hist(comb$ave_site_livemass.peryr)
ModrMod_AveSiteProd <- feols(log(live_mass) ~ log(rich) + log(rich):ave_site_livemass  | newplotid + site.by.yeardummy, comb)
ModrMod_YrSiteProd  <- feols(log(live_mass) ~ log(rich) + log(rich):ave_site_livemass.peryr  | newplotid + site.by.yeardummy, comb)
esttex(ModrMod_AveSiteProd, ModrMod_YrSiteProd,
coefstat = "se",
file = "./output/Table_S5_R_se.tex")
esttex(ModrMod_AveSiteProd, ModrMod_YrSiteProd,
coefstat = "confint",
file = "./output/Table_S5_R_ci.tex")
#### Analyses for Table S6 using cut-offs akin to Wang et al. 2019 Nature Communications
## Using the productivity groups from Wang et al 2019 Nature Communications
# Yongfans response:
# The 151 grids in HerbDivNet data were divided into three equal groups,
# depending on their mean productivity: low, medium, and high productivity (with 50 to 51 grids each).
# The cutoff values of primary productivity of each group:
#
# Low (51 grids): 30.18-238.73 (g/m^2)
# Medium (50 grids): 239.67-409.69 (g/m^2)
# High (50 grids): 414.29-1382.42 (g/m^2)
# do the groups based on the overall average since Wang et al was a cross-section so that is more comparable
summary(comb$ave_site_livemass.peryr)
summary(comb$ave_site_livemass)
#check that it worked length(unique(comb$ave_site_livemass))  == 43
## Do a different cut off Low, Medium, High groups of site livemass, based on Wang et al cut-offs
comb[, ProdGroup_WangCutoffs:=cut(ave_site_livemass, breaks=c(30.18,239.67,414.20,1609), labels=c("Low","Medium","High")), by = .(site_code) ]
head(comb)
table(comb$ProdGroup_WangCutoffs)
summary(comb$ProdGroup_WangCutoffs)
plot(comb$ProdGroup_WangCutoffs, main = "Productivity Groups (Average Across Years)")
## the Wang et al. paper uses a single year of data. Thus, we also need to create these cut-offs for each site and year in our data:
comb[, ProdGroup := cut(ave_site_livemass.peryr, breaks=c(30.18,239.67,414.20,1609), labels=c("Low","Medium","High"))]
head(comb)
table(comb$ProdGroup)
plot(comb$ProdGroup, main = "Productivity Groups Per Year")
## Table S6
ModrMod_ProdGroup <- feols(log(live_mass) ~ log(rich) + log(rich):ProdGroup | newplotid + site.by.yeardummy, comb)
ModrMod_ProdGroupWang  <- feols(log(live_mass) ~ log(rich) + log(rich):ProdGroup_WangCutoffs  | newplotid + site.by.yeardummy, comb)
esttex(ModrMod_ProdGroup, ModrMod_ProdGroupWang,
coefstat = "se",
file = "./output/Table_S6_R_se.tex")
esttex(ModrMod_ProdGroup, ModrMod_ProdGroupWang,
coefstat = "confint",
file = "./output/Table_S6_R_ci.tex")
########################################################################
## NutNet Main Text Models ###########################################
## Laura Dee - in LFE ###############################################
##########################################################################
# updated Dec 27, 2019
#updated May 11, 2020 to include Simpsons div models
#cleaned up to focus on main results for Figures 2 & 3 on Feb 5 2021
#notes on using lfe versus previous implementation of models:
#it does, especially if you're in a "FE nested within clusters" setting
#which the code I'd given you before did not account for
# since i was unaware of it at the time
# basically when doing degrees of freedom corrections, lfe won't count fixed effects nested
# in clusters b/c that would sort of be double counting
#plotting coefficient estimates from felm objects:
# https://raw.githack.com/uo-ec607/lectures/master/08-regression/08-regression.html#high_dimensional_fes_and_(multiway)_clustering
#plotting resurces: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
# theme(legend.position="top")
#http://www.sthda.com/english/wiki/ggplot2-legend-easy-steps-to-change-the-position-and-the-appearance-of-a-graph-legend-in-r-software
rm(list = ls())
# Define project directory
cdir <- "C:/GitHub/NutNetCausalinf/"
###########################
## BELOW THIS POINT, code should just run ##
setwd(cdir)
require(ggplot2)
library(plyr)
library(data.table)
library(AER)
library(sandwich)
library(foreign)
library(car)
library(lfe)
library(fixest)
library(lme4)
library(texreg)
library(broom)
library(tidyverse)
library(RColorBrewer)
library(cowplot)
### purpose built functions ###
source("./code/r/useful_functions.R")
##########################################
## Analysis using small complete data ####
combonly <- TRUE  # combonly -> finalprocess_and_datachecks
rm(list=setdiff(ls(),c("cdir","ihs","tidy")))
combonly <- FALSE
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
cover <- fread("C:/Dropbox/Dropbox/Research_Active/IV in ecology/NutNet/NutNetCoverData_ProcessedAug2019.csv")
source("./code/r/finalprocess_and_datachecks.R") # Doesn't produce Table S1 this time
source("./code/r/finalprocess_coverdata.R")
Mod1A <- felm(log(live_mass) ~ ihs(sr_INT) + ihs(sr_NAT)  | newplotid + site.by.yeardummy | 0 | newplotid, data = mech.data)
summary(Mod1A, robust = TRUE)
install.packages("corrplot")
SpecMod_Rich     <- feols(log(live_mass) ~ ihs(sr_INT) + ihs(sr_NAT) | newplotid + site.by.yeardummy, mech.data)
SpecMod_NatvNonNat <- feols(log(live_mass) ~ ihs(sr_INT) + ihs(sr_NAT) | newplotid + site.by.yeardummy, mech.data)
vcov_NatvNonNat <- vcov(SpecMod_NatvNonNat , cluster = "newplotid")
linearHypothesis(SpecMod_NatvNonNat, hypothesis.matrix = "ihs(sr_INT) = ihs(sr_NAT)",
test = "F", vcov = vcov_NatvNonNat,  singular.ok = T)
SpecMod_NatvNonNat     <- feols(log(live_mass) ~ ihs(sr_INT) + ihs(sr_NAT) | newplotid + site.by.yeardummy, mech.data)
summary(SpecMod_NatvNonNat)
linearHypothesis(SpecMod_NatvNonNat, hypothesis.matrix = "ihs(sr_INT) = ihs(sr_NAT)",
test = "F", singular.ok = T,
vcov = vcov(SpecMod_NatvNonNat, cluster = "newplotid"))
FigNatvNonNat.data <-  tidy(SpecMod_NatvNonNat)
FigNatvNonNat.data <-  tidy(SpecMod_NatvNonNat) %>%
mutate(reg = "Native vs Non-Native")
View(FigNatvNonNat.data)
Plot Figure Native vs NonNative
# Prep Data
FigNatvNonNat.data <-  tidy(SpecMod_NatvNonNat) %>%
mutate(reg = "Native vs Non-Native")
# Plot
FigNatvNonNat.plot <- FigNatvNonNat.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 1.5, position = position_dodge(width = 0.5)) +
scale_colour_discrete() +
scale_color_manual(values=invcols[c(1,2)]) +
theme_classic() +
theme(legend.position = c(0.6, 0.77),
legend.title = element_blank(),
legend.text  = element_text(size=14),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.7, .8) +
scale_x_discrete(labels = c("Species Richness", "Simpson's Diversity")) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-.8, -.6, -.4, -.2, 0, .2, .4, .6, .8)
) %>%
labs(title = "Main Study Design",
caption = "", x = "Variable", y = "Estimated effect size"
)
invcols <- c("gray69", "saddlebrown")
# Prep Data
FigNatvNonNat.data <-  tidy(SpecMod_NatvNonNat) %>%
mutate(reg = "Native vs Non-Native")
# Plot
FigNatvNonNat.plot <- FigNatvNonNat.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 1.5, position = position_dodge(width = 0.5)) +
scale_colour_discrete() +
scale_color_manual(values=invcols[c(1,2)]) +
theme_classic() +
theme(legend.position = c(0.6, 0.77),
legend.title = element_blank(),
legend.text  = element_text(size=14),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.7, .8) +
scale_x_discrete(labels = c("Species Richness", "Simpson's Diversity")) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-.8, -.6, -.4, -.2, 0, .2, .4, .6, .8)
) %>%
labs(title = "Main Study Design",
caption = "", x = "Variable", y = "Estimated effect size"
)
FigNatvNonNat.plot
# Plot
FigNatvNonNat.plot <- FigNatvNonNat.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 1.5, position = position_dodge(width = 0.5)) +
scale_colour_discrete(name="term") +
scale_color_manual(values=invcols[c(1,2)]) +
theme_classic() +
theme(legend.position = c(0.6, 0.77),
legend.title = element_blank(),
legend.text  = element_text(size=14),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.7, .8) +
scale_x_discrete(labels = c("Species Richness", "Simpson's Diversity")) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-.8, -.6, -.4, -.2, 0, .2, .4, .6, .8)
) %>%
labs(title = "Main Study Design",
caption = "", x = "Variable", y = "Estimated effect size"
)
FigNatvNonNat.plot
FigNatvNonNat.plot <- FigNatvNonNat.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 1.5, position = position_dodge(width = 0.5)) +
scale_colour_discrete(name="term") +
scale_color_manual(values=invcols[c(1,2)]) +
theme_classic() +
theme(legend.position = c(0.6, 0.77),
legend.title = element_blank(),
legend.text  = element_text(size=14),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.4, .2) +
scale_x_discrete(labels = c('Non-native','Native')) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-.8, -.6, -.4, -.2, 0, .2, .4, .6, .8)
) %>%
labs(title = "A. Effect size of Native vs Invasive Species Richness on Productivity",
caption = "", x = "Type of Species", y = "Estimate for log(species richness) effect size"
)
FigNatvNonNat.plot
invcols <- c("gray69", "saddlebrown")
# Prep Data
FigNatvNonNat.data <-  tidy(SpecMod_NatvNonNat) %>%
mutate(reg = "Native vs Non-Native")
# Plot
FigNatvNonNat.plot <- FigNatvNonNat.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 1.5, position = position_dodge(width = 0.5)) +
scale_colour_discrete(name="term") +
scale_color_manual(values=invcols[c(1,2)]) +
theme_classic() +
theme(legend.position = "none",
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.4, .2) +
scale_x_discrete(labels = c('Non-native','Native')) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-.8, -.6, -.4, -.2, 0, .2, .4, .6, .8)
) %>%
labs(title = "A. Effect size of Native vs Invasive Species Richness on Productivity",
caption = "", x = "Type of Species", y = "Estimate for log(species richness) effect size"
)
FigNatvNonNat.plot
FigNatvNonNat.plot <- FigNatvNonNat.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 1.5, position = position_dodge(width = 0.5)) +
scale_color_manual(name = "term", values=invcols[c(1,2)]) +
theme_classic() +
theme(legend.position = "none",
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.4, .2) +
scale_x_discrete(labels = c('Non-native','Native')) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-.8, -.6, -.4, -.2, 0, .2, .4, .6, .8)
) %>%
labs(title = "A. Effect size of Native vs Invasive Species Richness on Productivity",
caption = "", x = "Type of Species", y = "Estimate for log(species richness) effect size"
)
FigNatvNonNat.plot
invcols[c(1,2)])
invcols[c(1,2)]
FigNatvNonNat.data <-  tidy(SpecMod_NatvNonNat) %>%
mutate(reg = "Native vs Non-Native")
# Plot
FigNatvNonNat.plot <- FigNatvNonNat.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 1.5, position = position_dodge(width = 0.5)) +
scale_colour_discrete(name="term", values=invcols[c(1,2)]) +
theme_classic() +
theme(legend.position = "none",
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.4, .2) +
scale_x_discrete(labels = c('Non-native','Native')) +
scale_y_continuous(limits=c(-.8, .85),
breaks = c(-.8, -.6, -.4, -.2, 0, .2, .4, .6, .8)
) %>%
labs(title = "A. Effect size of Native vs Invasive Species Richness on Productivity",
caption = "", x = "Type of Species", y = "Estimate for log(species richness) effect size"
)
FigNatvNonNat.plot
FigNatvNonNat.plot <- FigNatvNonNat.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(aes(col = reg), size = 1.5, position = position_dodge(width = 0.5)) +
scale_colour_discrete(name="term") +
scale_color_manual(values=invcols[c(1,2)]) +
theme_classic() +
theme(legend.position = "none",
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-.4, .2) +
scale_x_discrete(labels = c('Non-native','Native'))  %>%
labs(title = "A. Effect size of Native vs Invasive Species Richness on Productivity",
caption = "", x = "Type of Species", y = "Estimate for log(species richness) effect size"
)
FigNatvNonNat.plot
