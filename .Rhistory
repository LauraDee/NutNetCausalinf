rm(list = ls())
# Define project directory
cdir <- "C:/GitHub/NutNetCausalinf/"
######################################################
## BELOW THIS POINT, code should just run ##
setwd(cdir)
# load packages; version numbers are noted for each package used.
require(ggplot2) # 3.3.3
library(plyr) # 1.8.6
library(data.table) # v 1.13.6
library(AER) # v 1.2-9 ### Do we use this anymore???
library(sandwich) #3.0-0
library(foreign) # 0.8-80
library(car)  #v  3.0-10
library(lfe)  # 2.8-6
library(fixest)  # v 0.8.2
library(lme4)  # 1.1-26
library(texreg) # 1.37. 5  #### Do we use this anymore???
library(broom)  # v 0.7.4
library(tidyverse)  # v 1.3.0
library(RColorBrewer) #1.1-2
library(cowplot) # 1.1.1
library(corrplot)  # 0.84
###  *** Need to run ***
### purpose built functions
source("./code/r/useful_functions.R")
##########################################
## Analysis using small complete data ####
combonly <- TRUE  # combonly -> finalprocess_and_datachecks
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
source("./code/r/finalprocess_and_datachecks.R") ## Produces Table S1
write.csv(comb, "C:/GitHub/NutNetCausalinf/example tutorial/cleaned_comb_data.csv", row.names=FALSE)
a <- getwd()
cdir <- getwd()
comb <- fread(paste(cdir,"example tutorial/cleaned_comb_data.csv",sep=""),na.strings='NA')
paste(cdir,"example tutorial/cleaned_comb_data.csv",sep="")
comb <- fread(paste(cdir,"cleaned_comb_data.csv",sep=""),na.strings='NA')
paste(cdir,"cleaned_comb_data.csv",sep="")
comb <- fread(paste(cdir,"/cleaned_comb_data.csv",sep=""),na.strings='NA')
SimpleCorr <- comb %>%
feols(log(live_mass) ~ log(rich)  | newplotid + site.by.yeardummy, .)
View(SimpleCorr)
SimpleCorr <- comb %>%
filter(year==2010)
feols(log(live_mass) ~ log(rich), .)
SimpleCorr <- comb %>%
filter(year==2010) %>%
feols(log(live_mass) ~ log(rich), .)
View(SimpleCorr)
SimpleCorr2012 <- comb %>%
filter(year==2010) %>%
feols(log(live_mass) ~ log(rich), .)
SimpleCorr2013 <- comb %>%
filter(year==2010) %>%
feols(log(live_mass) ~ log(rich), .)
SimpleCorr2012 <- comb %>%
filter(year==2012) %>%
feols(log(live_mass) ~ log(rich), .)
SimpleCorr2013 <- comb %>%
filter(year==2013) %>%
feols(log(live_mass) ~ log(rich), .)
View(SimpleCorr2012)
View(SimpleCorr2013)
etable(SimpleCorr2012, SimpleCorr2013, se = "twoway", subtitles = c("Data in 2012", "Data in 2013"))
SimpleCorr2012 <- comb %>%
filter(year==2012) %>%
feols(log(live_mass) ~ log(rich), ., cluster = newplotid)
etable(SimpleCorr2012, SimpleCorr2013, cluster = newplotid, subtitles = c("Data in 2012", "Data in 2013"))
summary(comb$newblockid)
feols(log(live_mass) ~ log(rich), comb, cluster = newplotid)
feols(log(live_mass) ~ log(rich), comb, cluster = "newplotid")
SimpleCorr2012 <- comb %>%
filter(year==2012) %>%
feols(log(live_mass) ~ log(rich), .)
View(SimpleCorr2012)
summary(SimpleCorr2012)
SimpleCorr2012 <- comb %>%
filter(year==2012) %>%
feols(log(live_mass) ~ log(rich), ., cluster = "newplotid")
summary(SimpleCorr2012)
SimpleCorr2012 <- comb %>%
filter(year==2012) %>%
feols(log(live_mass) ~ log(rich), ., cluster = "newplotid")
SimpleCorr2013 <- comb %>%
filter(year==2013) %>%
feols(log(live_mass) ~ log(rich), ., cluster = "newplotid")
etable(SimpleCorr2012, SimpleCorr2013, cluster = "newplotid", subtitles = c("Data in 2012", "Data in 2013"))
etable(SimpleCorr2012, SimpleCorr2013, cluster = "newplotid", drop = "Intercept", subtitles = c("Data in 2012", "Data in 2013"))
library(rmarkdown)
local({
# The directory where Pandoc will be extracted. Feel free
# to adjust this path as appropriate.
dir <- "~/rstudio-pandoc"
# The version of Pandoc to be installed.
version <- "2.7.1"
# Create and move to the requested directory.
dir.create(dir, showWarnings = FALSE, recursive = TRUE)
owd <- setwd(dir)
on.exit(setwd(owd), add = TRUE)
# Construct path to pandoc.
root <- "https://s3.amazonaws.com/rstudio-buildtools"
suffix <- sprintf("pandoc-%s-windows-x86_64.zip", version)
url <- file.path(root, "pandoc-rstudio", version, suffix)
# Download and extract pandoc.
file <- basename(url)
utils::download.file(url, destfile = file)
utils::unzip(file)
unlink(file)
# Write .Renviron to update the version of Pandoc used.
entry <- paste("RSTUDIO_PANDOC", shQuote(path.expand(dir)), sep = " = ")
contents <- if (file.exists("~/.Renviron")) readLines("~/.Renviron")
filtered <- grep("^RSTUDIO_PANDOC", contents, value = TRUE, invert = TRUE)
amended <- union(filtered, entry)
writeLines(amended, "~/.Renviron")
# Report change to the user.
writeLines("Updated .Renviron:\n")
writeLines(amended)
writeLines("\nPlease restart RStudio for these changes to take effect.")
})
