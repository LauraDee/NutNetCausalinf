geom_hline(yintercept = 0, col = "black") +
ylim(-1.1, 1.1) %>%
labs(title = "Marginal effect of richness on live mass",
caption = "", x = "Design", y = "Estimated effect size"
)
Fig3.plot
# Plot
Fig3.plot <- Fig3.data %>%
ggplot(aes(x=reg, y=estimate, ymin = conf.low, ymax = conf.high, colour = reg)) +
geom_pointrange(size = 1.5) +
scale_colour_discrete(name="Model") +
scale_color_manual(values=cbPalette[c(7,6,2, 3, 1)]) +
theme_classic() +
theme(legend.position = c(0.4, 0.8),
legend.title = element_blank(),
legend.text  = element_text(size=14),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
ylim(-1.1, 1.1) %>%
labs(title = element_blank(),
caption = "", x = "Design", y = "Estimated effect size"
)
Fig3.plot
Fig3.plot <- Fig3.data %>%
ggplot(aes(x=reg, y=estimate, ymin = conf.low, ymax = conf.high, colour = reg)) +
geom_pointrange(size = 1.5) +
scale_colour_discrete(name="Model") +
scale_color_manual(values=cbPalette[c(7,6,2, 3, 1)]) +
theme_classic() +
theme(legend.position = c(0.4, 0.8),
legend.title = element_blank(),
legend.text  = element_text(size=16),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
scale_y_continuous(limits=c(-1.1, 1.1)) +
ylim(-1.1, 1.1) %>%
labs(title = element_blank(),
caption = "", x = "Design", y = "Estimated effect size"
)
Fig3.plot
rm(list = ls())
# Define project directory
cdir <- "C:/GitHub/NutNetCausalinf/"
###########################
## BELOW THIS POINT, code should just run ##
setwd(cdir)
require(ggplot2)
library(plyr)
library(data.table)
library(AER)
library(sandwich)
library(foreign)
library(car)
library(lfe)
library(fixest)
library(lme4)
library(texreg)
library(broom)
library(tidyverse)
library(RColorBrewer)
library(cowplot)
### purpose built functions ###
source("./code/r/useful_functions.R")
rm(list = ls())
rm(list = ls())
# Define project directory
cdir <- "C:/GitHub/NutNetCausalinf/"
###########################
## BELOW THIS POINT, code should just run ##
setwd(cdir)
require(ggplot2)
library(plyr)
library(data.table)
library(AER)
library(sandwich)
library(foreign)
library(car)
library(lfe)
library(fixest)
library(lme4)
library(texreg)
library(broom)
library(tidyverse)
library(RColorBrewer)
library(cowplot)
### purpose built functions ###
source("./code/r/useful_functions.R")
########################################################################
## NutNet Main Text Models ###########################################
## Laura Dee - in LFE ###############################################
##########################################################################
# updated Dec 27, 2019
#updated May 11, 2020 to include Simpsons div models
#cleaned up to focus on main results for Figures 2 & 3 on Feb 5 2021
#notes on using lfe versus previous implementation of models:
#it does, especially if you're in a "FE nested within clusters" setting
#which the code I'd given you before did not account for
# since i was unaware of it at the time
# basically when doing degrees of freedom corrections, lfe won't count fixed effects nested
# in clusters b/c that would sort of be double counting
#plotting coefficient estimates from felm objects:
# https://raw.githack.com/uo-ec607/lectures/master/08-regression/08-regression.html#high_dimensional_fes_and_(multiway)_clustering
#plotting resurces: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
# theme(legend.position="top")
#http://www.sthda.com/english/wiki/ggplot2-legend-easy-steps-to-change-the-position-and-the-appearance-of-a-graph-legend-in-r-software
rm(list = ls())
# Define project directory
cdir <- "C:/GitHub/NutNetCausalinf/"
###########################
## BELOW THIS POINT, code should just run ##
setwd(cdir)
require(ggplot2)
library(plyr)
library(data.table)
library(AER)
library(sandwich)
library(foreign)
library(car)
library(lfe)
library(fixest)
library(lme4)
library(texreg)
library(broom)
library(tidyverse)
library(RColorBrewer)
library(cowplot)
### purpose built functions ###
source("./code/r/useful_functions.R")
combonly <- TRUE  # combonly -> finalprocess_and_datachecks
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
rm(list=setdiff(ls(),c("cdir","ihs","tidy")))
combonly <- FALSE
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
cover <- fread("~/Dropbox/IV in ecology/NutNetNutNetCoverData_ProcessedAug2019.csv")
cover <- fread("C:/Dropbox/Dropbox/Research_Active/IV in ecology/NutNetNutNetCoverData_ProcessedAug2019.csv")
cover <- fread("C:/Dropbox/Dropbox/Research_Active/IV in ecology/NutNet/NutNetCoverData_ProcessedAug2019.csv")
rm(list=setdiff(ls(),c("cdir","ihs","tidy")))
combonly <- FALSE
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
cover <- fread("C:/Dropbox/Dropbox/Research_Active/IV in ecology/NutNet/NutNetCoverData_ProcessedAug2019.csv")
source("./code/r/finalprocess_and_datachecks.R") # Doesn't produce Table S1 this time
rm(list=setdiff(ls(),c("cdir","ihs","tidy")))
combonly <- FALSE
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
cover <- fread("C:/Dropbox/Dropbox/Research_Active/IV in ecology/NutNet/NutNetCoverData_ProcessedAug2019.csv")
source("./code/r/finalprocess_and_datachecks.R") # Doesn't produce Table S1 this tim
### Confirm that only control plots are in the data
table(comb$trt)
# ## Confirm the # of years
table(comb$year)
cover = cover[trt == "Control",]
### Confirm that only control plots are in the data
table(cover$trt)
### Confirm the # of years
table(cover$year)
###############################################################################
#### Filter Data by years   ################################################
################################################################################
# in cover - filter to control plots with 5 years of data to match the main analyses
#Get maximum number of treatment years per site
cover[,max.trt.yr:=max(year_trt), by=.(site_code)]
#Find min value of treatment years; 0 = pre-treatment data
cover[,min.trt.yr:=min(year_trt), by=.(site_code)]
#filter to those sites and years
cover[, has.5.yrs.data:=(min.trt.yr == 0 & max.trt.yr >= 4)|(min.trt.yr==1 & max.trt.yr>=5)] #this keeps control plots without a pre-treatment survey
cover = cover[has.5.yrs.data==T,]
## the filter missed two sites that only have 4 years of data - but over the span of 5 years
# Azi is missing live_mass data in 2012. Barta.us is missing data for all variables 2010, so only has 4 years of data.
# remove these 2 sites from the data with the filter that AT LEAST 5 years of data is needed for the site to be included:
cover = cover[site_code != "azi.cn",]
cover = cover[site_code != "barta.us",]
# create a variable for one of the analyes for Fig 5
cover[, non_rare_spp.DI2 := sr_non.rare_non.nat2 + sr_non.rare_nat2]
##########################################################################################
### Process comb data to prep to use it in the models & merge #############################
############################################################################################
## make year a character in both datasets, to be a dummy variable:
comb$year <- as.character(comb$year)
cover$year <- as.character(cover$year)
# same with plot
comb$plot <- as.character(comb$plot)
cover$plot <- as.character(cover$plot)
cover$V1 = NULL
#check that the DIgroups 1 & 2 look OK #
table(cover$DIgroup)
table(cover$DIgroup2)
#################################################################################################
## Grab the summary columns from cover to merge  #######################################################
################################################################################################
#these variables also need to be removed because non_rare_spp2 is a series of TRUE or FALSE per species so its adding extra rows:
# non_rare_spp2
#to subset columns and also remove duplicate rows from the cover file so that there is one observation per plot and year
# and the data isn't artificially replicated
coversummaries = unique(cover[, .(site_code, year,  site_name,  plot,  year_trt , trt, totplotcover.yr.live, LegumePercentcover.yr, cover_nat_dom, cover_nat_sub,
sr_nat_sub, sr_non.nat_sub, cover_tot_non.rare, sr_INT, sr_NAT, sr_domspp, sr_rarespp, sr_subordspp, sr_non_rare_spp,
sr_non.nat_rare,  sr_nat_rare, sr_non.rare_non.nat, sr_non.rare_nat, sr_nat_dom, sr_non.nat_dom, relabund_sr_domspp,
sr_non_rare_spp.RelA,
sr_non_rare_spp.Freq, sr_non.rare_nat.Freq, sr_non.rare_non.nat.Freq,
#rare_spp.DI2,
sr_rare_non.nat.Freq, sr_rare_nat.Freq,
sr_domspp2, sr_rarespp2 , sr_subordspp2, non_rare_spp.DI2,
relabund_sr_rarespp, relabund_sr_subordspp,  sr_nat_dom.Freq, sr_non.nat_dom.Freq,
sr_nat_sub.Freq, sr_non.nat_sub.Freq,
sr_non.rare_nat.RelA, sr_non.rare_non.nat.RelA, sr_rare_non.nat.RelA, sr_rare_nat.RelA,
# sr_non.rare_nat.Freq,  sr_rare_non.nat.Freq, sr_rare_nat.Freq,
sr_non.rare_nat.Freq2, sr_non.rare_non.nat.Freq2, sr_rare_non.nat.Freq2, sr_rare_nat.Freq2,
sr_non.rare_nat.RelA2, sr_non.rare_non.nat.RelA2, sr_rare_non.nat.RelA2, sr_rare_nat.RelA2, # non_rare_spp2,
sr_non.rare_nat2, sr_non.rare_non.nat2, sr_non.nat_rare2, sr_nat_rare2, sr_Nfixer,
# sr_rarespp2,
#rare_spp.DI2,
sr_non.Nfixer, N_fixer_cover.yr,
NonNative_cover.yr , Native_cover.yr , sr_annual, sr_peren, sr_null.lspan, sr_biennial ,
sr_indeter, AnnualPercentcover.yr, PerenPercentcover.yr , sr_graminoid, sr_forbs, sr_woody,
sr_legume, sr_bryophyte , sr_cactus, Dom_cover.yr,
GrassPercentcover.yr ,ForbPercentcover.yr, WoodyPercentcover.yr,
freq_sr_domspp, freq_sr_rarespp, freq_sr_subordspp
)])
#make sure number of rows isnt inflated
nrow(coversummaries)
# lagged and change variable removed from above but included here:
coversummaries.robustness = unique(cover[, .(site_code, year,  site_name,  plot,  year_trt , trt, totplotcover.yr.live, LegumePercentcover.yr, cover_nat_dom, cover_nat_sub,
sr_nat_sub, sr_non.nat_sub, cover_tot_non.rare, sr_INT, sr_NAT, sr_domspp, sr_rarespp, sr_subordspp, sr_non_rare_spp,
sr_non.nat_rare,  sr_nat_rare, sr_non.rare_non.nat, sr_non.rare_nat, sr_nat_dom, sr_non.nat_dom, relabund_sr_domspp,
sr_non_rare_spp.RelA, sr_non_rare_spp.Freq, sr_non.rare_nat.Freq, sr_rare_non.nat.Freq,
#rare_spp.DI2,
sr_domspp2, sr_rarespp2 , sr_subordspp2,
relabund_sr_rarespp, relabund_sr_subordspp, sr_non.rare_non.nat.Freq,  sr_nat_dom.Freq, sr_non.nat_dom.Freq,
sr_nat_sub.Freq, sr_non.nat_sub.Freq, sr_non.rare_nat.RelA, sr_non.rare_non.nat.RelA, sr_rare_non.nat.RelA, sr_rare_nat.RelA,
# sr_non.rare_nat.Freq,  sr_rare_non.nat.Freq, sr_rare_nat.Freq,
non_rare_spp2, non_rare_spp.DI2,
sr_non.rare_nat.Freq2, sr_non.rare_non.nat.Freq2, sr_rare_non.nat.Freq2, sr_rare_nat.Freq2,
sr_non.rare_nat.RelA2, sr_non.rare_non.nat.RelA2, sr_rare_non.nat.RelA2, sr_rare_nat.RelA2, # non_rare_spp2,
sr_non.rare_nat2, sr_non.rare_non.nat2, sr_non.nat_rare2, sr_nat_rare2, sr_Nfixer,
# sr_rarespp2,
#rare_spp.DI2,
sr_non.Nfixer, change_sr_Nfixer, lagged_sr_Nfixer, N_fixer_cover.yr ,change_N_fixer_cover, lagged_N_fixer_cover.yr,
NonNative_cover.yr , Native_cover.yr , sr_annual, sr_peren, sr_null.lspan, sr_biennial ,
sr_indeter, change_sr_annual, change_sr_peren, AnnualPercentcover.yr, PerenPercentcover.yr , sr_graminoid, sr_forbs, sr_woody,
sr_legume, sr_bryophyte , sr_cactus,
change_sr_non.live, GrassPercentcover.yr ,ForbPercentcover.yr, WoodyPercentcover.yr, lagged_LegumePercentCover.yr,
freq_sr_domspp, freq_sr_rarespp, freq_sr_subordspp
)])
#################################################################################################
## Merge comb with Processed Cover Data #######################################################
################################################################################################
# Merge the cover data with the comb data. Processed the April 2018 versions of the datasets.
# merge to keep the data that is in the comb file (i.e., sites with at least 5 years of data for control plots)
mech.data = merge(comb, coversummaries, by=c("site_code","plot","year"), all.x=T)
#what I had been doing: mech.data = merge(comb, cover, by=c("site_code","plot","year"), all.x=T)
nrow(mech.data) #should be 1231
dim(mech.data)
nrow(comb)
nrow(cover)
##########################################################################################
### Process merge data to prep to use it in the models  #################################
##########################################################################################
# make year a character, to be a dummy variable:
mech.data$year <- as.character(mech.data$year)
## *Check to make sure that site and year are factors/characters* important*
class(mech.data$year)
class(mech.data$site_code)
class(mech.data$newplotid)
# Filter data to records with non-NA live_mass and non-NA richness.
mech.data = mech.data[!is.na(live_mass) & !is.na(rich)]
## Confirm that only control plots are in the data
table(mech.data$trt.x)
## Confirm the # of years
table(mech.data$year)
## Confirm its the same site list
list(unique(mech.data$site_code))
#make a factor that is site by year
mech.data[, site.by.yeardummy := paste(site_code, year, sep = "_")]
mech.data[, even_year0 := even[year_trt.x == "0" ], by = .(plot, site_code)]
help("linearHypothesis")
MainMod_RichEven <- feols(log(live_mass) ~ log(rich) + ihs(even) | newplotid + site.by.yeardummy, comb)
rm(list=setdiff(ls(),c("cdir","ihs","tidy")))
combonly <- FALSE
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
cover <- fread("C:/Dropbox/Dropbox/Research_Active/IV in ecology/NutNet/NutNetCoverData_ProcessedAug2019.csv")
source("./code/r/finalprocess_and_datachecks.R") # Doesn't produce Table S1 this tim
MainMod_RichEven <- feols(log(live_mass) ~ log(rich) + ihs(even) | newplotid + site.by.yeardummy, comb)
linearHypothesis(MainMod_RichEven, hypothesis.matrix = "log(rich) = ihs(even)",
test = "F", singular.ok = T)
help(fixest::vcov)
help(vcov)
help("vcov.fixest")
linearHypothesis(MainMod_RichEven, hypothesis.matrix = "log(rich) = ihs(even)")
help("linearHypothesis")
linearHypothesis.fixest
MainMod_RichEven <- feols(log(live_mass) ~ log(rich) + ihs(even) | newplotid + site.by.yeardummy, comb, cluster = "newplotid")
vcov_RichEven <- vcov(MainMod_RichEven, cluster = "newplotid")
linearHypothesis(MainMod_RichEven, hypothesis.matrix = "log(rich) = ihs(even)", vcov = vcov_RichEven)
linearHypothesis(MainMod_RichEven, hypothesis.matrix = "log(rich) = ihs(even)", vcov = vcov_RichEven, singular.ok = T)
linearHypothesis(MainMod_RichEven, hypothesis.matrix = "log(rich) = ihs(even)", vcov = vcov_RichEven, test = "F", singular.ok = T)
aa <- linearHypothesis(MainMod_RichEven, hypothesis.matrix = "log(rich) = ihs(even)", vcov = vcov_RichEven, test = "F", singular.ok = T)
View(aa)
MechMod_All <-feols(log(live_mass) ~ ihs(sr_non.rare_nat) + ihs(sr_non.rare_non.nat)  + ihs(sr_non.nat_rare) +  ihs(sr_nat_rare)
| newplotid + site.by.yeardummy, mech.data, cluster = "newplotid")
########################################################################
## NutNet Main Text Models ###########################################
## Laura Dee - in LFE ###############################################
##########################################################################
# updated Dec 27, 2019
#updated May 11, 2020 to include Simpsons div models
#cleaned up to focus on main results for Figures 2 & 3 on Feb 5 2021
#notes on using lfe versus previous implementation of models:
#it does, especially if you're in a "FE nested within clusters" setting
#which the code I'd given you before did not account for
# since i was unaware of it at the time
# basically when doing degrees of freedom corrections, lfe won't count fixed effects nested
# in clusters b/c that would sort of be double counting
#plotting coefficient estimates from felm objects:
# https://raw.githack.com/uo-ec607/lectures/master/08-regression/08-regression.html#high_dimensional_fes_and_(multiway)_clustering
#plotting resurces: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
# theme(legend.position="top")
#http://www.sthda.com/english/wiki/ggplot2-legend-easy-steps-to-change-the-position-and-the-appearance-of-a-graph-legend-in-r-software
rm(list = ls())
# Define project directory
cdir <- "C:/GitHub/NutNetCausalinf/"
###########################
## BELOW THIS POINT, code should just run ##
setwd(cdir)
require(ggplot2)
library(plyr)
library(data.table)
library(AER)
library(sandwich)
library(foreign)
library(car)
library(lfe)
library(fixest)
library(lme4)
library(texreg)
library(broom)
library(tidyverse)
library(RColorBrewer)
library(cowplot)
### purpose built functions ###
source("./code/r/useful_functions.R")
rm(list=setdiff(ls(),c("cdir","ihs","tidy")))
combonly <- FALSE
comb <- fread("./data/processed/NutNetControlPlotData_v201804.csv",na.strings='NA')
cover <- fread("C:/Dropbox/Dropbox/Research_Active/IV in ecology/NutNet/NutNetCoverData_ProcessedAug2019.csv")
source("./code/r/finalprocess_and_datachecks.R") # Doesn't produce Table S1 this time
source("./code/r/finalprocess_coverdata.R") # Doesn't produce Table S1 this time
MechMod_All <-feols(log(live_mass) ~ ihs(sr_non.rare_nat) + ihs(sr_non.rare_non.nat)  + ihs(sr_non.nat_rare) +  ihs(sr_nat_rare)
| newplotid + site.by.yeardummy, mech.data, cluster = "newplotid")
MechMod_All
vcov_MechMod <- vcov(MechMod_All, cluster = "newplotid")
linearHypothesis(MechMod_All, hypothesis.matrix = "ihs(sr_non.rare_nat) = ihs(sr_non.rare_non.nat)",
test = "F", vcov = vcov_MechMod,  singular.ok = T)
linearHypothesis(MechMod_All, hypothesis.matrix = "ihs(sr_nat_rare) = ihs(sr_non.rare_nat)",
test = "F", vcov = vcov_MechMod,  singular.ok = T)
linearHypothesis(MechMod_All, hypothesis.matrix = "ihs(sr_non.nat_rare) = ihs(sr_non.rare_non.nat)",
test = "F", vcov = vcov_MechMod,  singular.ok = T)
linearHypothesis(MechMod_All, hypothesis.matrix = "ihs(sr_non.nat_rare) = ihs(sr_nat_rare)",
test = "F", vcov = vcov_MechMod,  singular.ok = T)
Fig5.data <- tidy(MechMod_All)
View(Fig5.data)
Fig5.data <-  bind_rows(
Fig5.data %>% mutate(reg = "Richness Model"),
)
View(Fig5.data)
Fig5.data$term = factor(Fig5.data$term,
levels=c( "ihs(sr_nat_rare)",
"ihs(sr_non.rare_nat)",
"ihs(sr_non.rare_non.nat)",
"ihs(sr_non.nat_rare)"))
View(Fig5.data)
Fig5.plot <- Fig5.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = reg)) +
geom_pointrange(size = 1.5) +
scale_colour_discrete(name="term") +
scale_color_manual(values=cbPalette[c(7,6,2, 3, 1)]) +
theme_classic() +
theme(legend.position = c(0.4, 0.8),
legend.title = element_blank(),
legend.text  = element_text(size=16),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
scale_y_continuous(limits=c(-1.1, 1.1)) +
ylim(-1.1, 1.1) %>%
labs(title = element_blank(),
caption = "", x = "Design", y = "Estimated effect size"
)
palette <- c("darkslateblue", "green4", "grey69", "maroon4" )
Fig5.plot <- Fig5.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(size = 1.5) +
scale_colour_discrete(name="term") +
scale_color_manual(values=palette[c(1,2,3,4)]) +
theme_classic() +
theme(legend.position = c(0.4, 0.8),
legend.title = element_blank(),
legend.text  = element_text(size=16),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
scale_x_discrete(labels = c('Rare & Native','Non-rare & Native', 'Non-rare & Non-native', 'Rare & Non-native'))
scale_y_continuous(limits=c(-0.7, 0.7)) +
ylim(-0.7,0.8) %>%
labs(title = element_blank(),
caption = "", x = "Type of Species", y = "Estimated effect size"
)
Fig5.plot
Fig5.plot <- Fig5.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(size = 1.5) +
scale_colour_discrete(name="term") +
scale_color_manual(values=palette[c(1,2,3,4)]) +
theme_classic() +
theme(legend.position = c(0.4, 0.8),
legend.title = element_blank(),
legend.text  = element_text(size=16),
legend.background = element_rect(size=0.5,
linetype="solid",
colour ="black" ),
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
scale_x_discrete(labels = c('Rare & Native','Non-rare & Native', 'Non-rare & Non-native', 'Rare & Non-native')) +
scale_y_continuous(limits=c(-0.7, 0.7)) +
ylim(-0.7,0.8) %>%
labs(title = element_blank(),
caption = "", x = "Type of Species", y = "Estimated effect size"
)
Fig5.plot
Fig5.plot <- Fig5.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(size = 1.5) +
scale_colour_discrete(name="term") +
scale_color_manual(values=palette[c(1,2,3,4)]) +
theme_classic() +
theme(legend.position = "none",
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
scale_x_discrete(labels = c('Rare & Native','Non-rare & Native', 'Non-rare & Non-native', 'Rare & Non-native')) +
scale_y_continuous(limits=c(-0.7, 0.7)) +
ylim(-0.7,0.8) %>%
labs(title = element_blank(),
caption = "", x = "Type of Species", y = "Estimated effect size"
)
Fig5.plot
palette <- c("darkslateblue", "green4", "grey69", "maroon4" )
Fig5.plot <- Fig5.data %>%
ggplot(aes(x=term, y=estimate, ymin = conf.low, ymax = conf.high, colour = term)) +
geom_pointrange(size = 1.5) +
scale_colour_discrete(name="term") +
scale_color_manual(values=palette[c(1,2,3,4)]) +
theme_classic() +
theme(legend.position = "none",
axis.text=element_text(size=22),
axis.title=element_text(size=20, face="bold"),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 25, face = "bold", hjust = 0.5) ) +
geom_hline(yintercept = 0, col = "black") +
scale_x_discrete(labels = c('Rare & Native','Non-rare & Native', 'Non-rare & Non-native', 'Rare & Non-native')) +
scale_y_continuous(limits=c(-0.7, 0.7)) +
ylim(-0.7,0.8) %>%
labs(title = element_blank(),
caption = "", x = "Type of Species", y = "Estimate for log(species richness) effect size"
)
Fig5.plot
